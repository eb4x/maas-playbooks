---
- name: configure kvm for maas
  hosts: maas
  become: true

  vars:
    virt_nets:
      - name: provision
        iface: br-provision
      - name: openstack
        iface: br-openstack

  pre_tasks:
    - include_vars: settings.yml
    - include_vars: settings.oauth.yml

    - name: create /var/lib/maas/.ssh
      file:
        path: /var/lib/maas/.ssh
        state: directory
        owner: maas
        group: maas
        mode: '700'

    - name: install libvirt
      apt:
        name:
          - libvirt-daemon-system
          - python3-libvirt
          - python3-lxml

    - name: define libvirt networks
      virt_net:
        command: define
        name: "{{ net.name }}"
        xml: "{{ lookup('template', 'virt_net.xml.j2') }}"
      with_items: "{{ virt_nets }}"
      loop_control:
        loop_var: net
      register: _define

    - name: create libvirt networks
      virt_net:
        command: create
        name: "{{ item.name }}"
      with_items: "{{ virt_nets }}"

    - name: autostart libvirt networks
      virt_net:
        autostart: true
        name: "{{ item.name }}"
      with_items: "{{ virt_nets }}"

  tasks:
    - name: generate ssh-key
      openssh_keypair:
        type: ecdsa
        size: 384
        path: /var/lib/maas/.ssh/id_ecdsa
      become_user: maas
      register: _id_ecdsa

    - name: allow maas key at root
      authorized_key:
        user: root
        key: "{{ _id_ecdsa.public_key }} maas@{{ inventory_hostname }}"

    - name: get pods
      uri:
        url: "{{ maas_base }}/MAAS/api/2.0/pods/"
        headers:
          Authorization: "{{ Authorization }}"
        return_content: true
      register: _maas_pods

    - name: create pod
      uri:
        method: POST
        url: "{{ maas_base }}/MAAS/api/2.0/pods/"
        headers:
          Authorization: "{{ Authorization }}"
        body:
          type: virsh
          power_address: qemu+ssh://root@127.0.0.1/system
          name: "{{ inventory_hostname }}"
        body_format: json
        return_content: true
      changed_when: true
      vars:
        get_pod_names: "[].name"
      when: inventory_hostname not in _maas_pods.json | json_query(get_pod_names)
