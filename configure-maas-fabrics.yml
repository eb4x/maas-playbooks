---
- name: get existing fabrics
  uri:
    url: "{{ maas_base }}/MAAS/api/2.0/fabrics/"
    headers:
      Authorization: "{{ Authorization }}"
    return_content: true
  register: _existing_fabrics

- name: modify fabrics if needed
  when: maas_network.fabrics | list | symmetric_difference(_existing_fabrics.json | json_query(get_fabric_names)) | length
  vars:
    get_fabric_names: "[].name"
  block:
    - name: remove fabrics not in config
      when: fabric.name not in maas_network.fabrics
      changed_when: true
      uri:
        url: "{{ maas_base }}/MAAS/api/2.0/fabrics/{{ fabric.id }}/"
        method: DELETE
        headers:
          Authorization: "{{ Authorization }}"
        status_code: [200, 204]
      loop: "{{ _existing_fabrics.json }}"
      loop_control:
        loop_var: fabric

    - name: create fabrics from config
      when: fabric not in (_existing_fabrics.json | json_query(get_fabric_names))
      changed_when: true
      uri:
        url: "{{ maas_base }}/MAAS/api/2.0/fabrics/"
        method: POST
        headers:
          Authorization: "{{ Authorization }}"
        body:
          name: "{{ fabric }}"
        body_format: json
        return_content: true
      with_items: "{{ maas_network.fabrics }}"
      loop_control:
        loop_var: fabric

    - name: refresh existing fabrics
      changed_when: true
      uri:
        url: "{{ maas_base }}/MAAS/api/2.0/fabrics/"
        headers:
          Authorization: "{{ Authorization }}"
        return_content: true
      register: _refresh_fabrics

    - name: workaround skipped refresh
      set_fact:
        _existing_fabrics: "{{ _refresh_fabrics }}"
      when: _refresh_fabrics is not skipped

- include_tasks: configure-maas-fabric-vlans.yml
  with_items: "{{ maas_network.fabrics }}"
  loop_control:
    loop_var: fabric
  vars:
    get_fabric_id: "[?name=='{{ fabric }}'].id | [0]"
    fabric_id: "{{ _existing_fabrics.json | json_query(get_fabric_id) }}"
